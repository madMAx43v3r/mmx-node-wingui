<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Harvester_Title" xml:space="preserve">
    <value>Harvester</value>
  </data>
  <data name="Plotter_Title" xml:space="preserve">
    <value>Plotter</value>
  </data>
  <data name="Settings_Title" xml:space="preserve">
    <value>Instellingen</value>
  </data>
  <data name="Node_Title" xml:space="preserve">
    <value>Node</value>
  </data>
  <data name="Settings_ShowConsole" xml:space="preserve">
    <value>Consolevenster weergeven</value>
  </data>
  <data name="Settings_PowerManagement" xml:space="preserve">
    <value>Energiebeheer</value>
  </data>
  <data name="Settings_ShowInNotifitation" xml:space="preserve">
    <value>Weergeven in systeemvak</value>
  </data>
  <data name="Settings_CloseToNotification" xml:space="preserve">
    <value>Naar systeemvak afsluiten</value>
  </data>
  <data name="Settings_StartOnStartup" xml:space="preserve">
    <value>Starten bij opstarten van Windows</value>
  </data>
  <data name="Settings_StartMinimized" xml:space="preserve">
    <value>Geminimaliseerd starten</value>
  </data>
  <data name="Settings_ConfirmationOnExit" xml:space="preserve">
    <value>Bevestiging bij afsluiten</value>
  </data>
  <data name="Settings_InhibitSystemSleep" xml:space="preserve">
    <value>Slaapstand voorkomen</value>
  </data>
  <data name="Settings_Debug" xml:space="preserve">
    <value>Debuggen</value>
  </data>
  <data name="Settings_MinimizeToNotification" xml:space="preserve">
    <value>Naar systeemvak minimaliseren</value>
  </data>
  <data name="Plotter_rmulti2" xml:space="preserve">
    <value>Thread vermenigvuldiger voor P2</value>
  </data>
  <data name="Plotter_threads" xml:space="preserve">
    <value>Aantal threads</value>
  </data>
  <data name="Plotter_tmpdir" xml:space="preserve">
    <value>Tijdelijk map</value>
  </data>
  <data name="Plotter_tmpdir2" xml:space="preserve">
    <value>Tijdelijke map 2 [Geheugen]</value>
  </data>
  <data name="Plotter_stagedir" xml:space="preserve">
    <value>Stage map om plotbestand te schrijven</value>
  </data>
  <data name="Plotter_tmptoggle" xml:space="preserve">
    <value>Afwisselend tmpdir/tmpdir2</value>
  </data>
  <data name="Plotter_waitforcopy" xml:space="preserve">
    <value>Wacht op het kopiëren voordat de volgende plot start</value>
  </data>
  <data name="Plotter_Start" xml:space="preserve">
    <value>Begin</value>
  </data>
  <data name="Plotter_size" xml:space="preserve">
    <value>K grootte</value>
  </data>
  <data name="Plotter_finaldir" xml:space="preserve">
    <value>Definitieve map om plot parallel te kopiëren</value>
  </data>
  <data name="Plotter_DirectoriesTab" xml:space="preserve">
    <value>Mappen</value>
  </data>
  <data name="Plotter_directout" xml:space="preserve">
    <value>Maak plot direct in definitieve map</value>
  </data>
  <data name="Plotter_PerfomanceTab" xml:space="preserve">
    <value>Prestatie</value>
  </data>
  <data name="Plotter_contract" xml:space="preserve">
    <value>Pool Contract Address (62 chars)</value>
  </data>
  <data name="Plotter_poolkey" xml:space="preserve">
    <value>Pool Public Key (48 bytes)</value>
  </data>
  <data name="Plotter_KeysTab" xml:space="preserve">
    <value>Sleutels</value>
  </data>
  <data name="Plotter_buckets" xml:space="preserve">
    <value>Aantal buckets</value>
  </data>
  <data name="Plotter_buckets3" xml:space="preserve">
    <value>Aantal buckets voor fase 3+4</value>
  </data>
  <data name="Plotter_farmerkey" xml:space="preserve">
    <value>Farmer Public Key (48 bytes)</value>
  </data>
  <data name="Plotter_nftplot" xml:space="preserve">
    <value>Maak NFT plot</value>
  </data>
  <data name="Plotter_count" xml:space="preserve">
    <value>Aantal plots om te maken</value>
  </data>
  <data name="harvesterPlots" xml:space="preserve">
    <value>Laad plots van:</value>
  </data>
  <data name="Harvester_Remove" xml:space="preserve">
    <value>Verwijderen</value>
  </data>
  <data name="Harvester_Add" xml:space="preserve">
    <value>Toevoegen</value>
  </data>
</root>