//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mmx.Gui.Win.Common.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.5.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StartOnStartup {
            get {
                return ((bool)(this["StartOnStartup"]));
            }
            set {
                this["StartOnStartup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ConfirmationOnExit {
            get {
                return ((bool)(this["ConfirmationOnExit"]));
            }
            set {
                this["ConfirmationOnExit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool StartMinimized {
            get {
                return ((bool)(this["StartMinimized"]));
            }
            set {
                this["StartMinimized"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowInNotification {
            get {
                return ((bool)(this["ShowInNotification"]));
            }
            set {
                this["ShowInNotification"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool _MinimizeToNotification {
            get {
                return ((bool)(this["_MinimizeToNotification"]));
            }
            set {
                this["_MinimizeToNotification"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool _CloseToNotification {
            get {
                return ((bool)(this["_CloseToNotification"]));
            }
            set {
                this["_CloseToNotification"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool InhibitSystemSleep {
            get {
                return ((bool)(this["InhibitSystemSleep"]));
            }
            set {
                this["InhibitSystemSleep"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ShowConsole {
            get {
                return ((bool)(this["ShowConsole"]));
            }
            set {
                this["ShowConsole"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("en")]
        public string LanguageCode {
            get {
                return ((string)(this["LanguageCode"]));
            }
            set {
                this["LanguageCode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Default")]
        public string Theme {
            get {
                return ((string)(this["Theme"]));
            }
            set {
                this["Theme"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool CheckForUpdates {
            get {
                return ((bool)(this["CheckForUpdates"]));
            }
            set {
                this["CheckForUpdates"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("3600")]
        public int UpdateInterval {
            get {
                return ((int)(this["UpdateInterval"]));
            }
            set {
                this["UpdateInterval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DisableOpenCL {
            get {
                return ((bool)(this["DisableOpenCL"]));
            }
            set {
                this["DisableOpenCL"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool SettingsUpgradeRequired {
            get {
                return ((bool)(this["SettingsUpgradeRequired"]));
            }
            set {
                this["SettingsUpgradeRequired"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("https://api.github.com/repos/madMAx43v3r/mmx-node/releases")]
        public string Classic_GitHubApi_Releases {
            get {
                return ((string)(this["Classic_GitHubApi_Releases"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("https://github.com/madMAx43v3r/mmx-node/releases")]
        public string Classic_GitHubReleasesUrl {
            get {
                return ((string)(this["Classic_GitHubReleasesUrl"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool LightMode {
            get {
                return ((bool)(this["LightMode"]));
            }
            set {
                this["LightMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ConnectOnStart {
            get {
                return ((bool)(this["ConnectOnStart"]));
            }
            set {
                this["ConnectOnStart"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public int CHIAPOS_MAX_CORES {
            get {
                return ((int)(this["CHIAPOS_MAX_CORES"]));
            }
            set {
                this["CHIAPOS_MAX_CORES"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public int CHIAPOS_MAX_CUDA_DEVICES {
            get {
                return ((int)(this["CHIAPOS_MAX_CUDA_DEVICES"]));
            }
            set {
                this["CHIAPOS_MAX_CUDA_DEVICES"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CHIAPOS_MAX_CORES_Enabled {
            get {
                return ((bool)(this["CHIAPOS_MAX_CORES_Enabled"]));
            }
            set {
                this["CHIAPOS_MAX_CORES_Enabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CHIAPOS_MAX_CUDA_DEVICES_Enabled {
            get {
                return ((bool)(this["CHIAPOS_MAX_CUDA_DEVICES_Enabled"]));
            }
            set {
                this["CHIAPOS_MAX_CUDA_DEVICES_Enabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("21")]
        public int CHIAPOS_MIN_CUDA_LOG_ENTRIES {
            get {
                return ((int)(this["CHIAPOS_MIN_CUDA_LOG_ENTRIES"]));
            }
            set {
                this["CHIAPOS_MIN_CUDA_LOG_ENTRIES"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CHIAPOS_MIN_CUDA_LOG_ENTRIES_Enabled {
            get {
                return ((bool)(this["CHIAPOS_MIN_CUDA_LOG_ENTRIES_Enabled"]));
            }
            set {
                this["CHIAPOS_MIN_CUDA_LOG_ENTRIES_Enabled"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("https://api.github.com/repos/madMAx43v3r/mmx-binaries/releases")]
        public string Gigahorse_GitHubApi_Releases {
            get {
                return ((string)(this["Gigahorse_GitHubApi_Releases"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.SpecialSettingAttribute(global::System.Configuration.SpecialSetting.WebServiceUrl)]
        [global::System.Configuration.DefaultSettingValueAttribute("https://github.com/madMAx43v3r/mmx-binaries/releases")]
        public string Gigahorse_GitHubReleasesUrl {
            get {
                return ((string)(this["Gigahorse_GitHubReleasesUrl"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("-1")]
        public int CHIAPOS_MAX_OPENCL_DEVICES {
            get {
                return ((int)(this["CHIAPOS_MAX_OPENCL_DEVICES"]));
            }
            set {
                this["CHIAPOS_MAX_OPENCL_DEVICES"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CHIAPOS_MAX_OPENCL_DEVICES_Enabled {
            get {
                return ((bool)(this["CHIAPOS_MAX_OPENCL_DEVICES_Enabled"]));
            }
            set {
                this["CHIAPOS_MAX_OPENCL_DEVICES_Enabled"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://api.github.com/repos/stotiks/chia-plot-manager/releases")]
        public string PlotManager_GitHubApi_Releases {
            get {
                return ((string)(this["PlotManager_GitHubApi_Releases"]));
            }
            set {
                this["PlotManager_GitHubApi_Releases"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("https://github.com/stotiks/chia-plot-manager/releases")]
        public string PlotManager_GitHubReleasesUrl {
            get {
                return ((string)(this["PlotManager_GitHubReleasesUrl"]));
            }
            set {
                this["PlotManager_GitHubReleasesUrl"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int[] CUDA_VISIBLE_DEVICES {
            get {
                return ((int[])(this["CUDA_VISIBLE_DEVICES"]));
            }
            set {
                this["CUDA_VISIBLE_DEVICES"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool CUDA_VISIBLE_DEVICES_Enabled {
            get {
                return ((bool)(this["CUDA_VISIBLE_DEVICES_Enabled"]));
            }
            set {
                this["CUDA_VISIBLE_DEVICES_Enabled"] = value;
            }
        }
    }
}
